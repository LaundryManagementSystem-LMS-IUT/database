DROP TABLE CHAT_SENDER;
DROP TABLE CHAT_RECEIVER;
DROP TABLE NOTIFICATION;
DROP TABLE CHAT;
DROP TABLE ADDRESS_RESOLVE;
DROP TABLE BILLING;
DROP TABLE ORDER_DETAILS;
DROP TABLE DELIVERY_INFORMATION;
DROP TABLE SERVICE;
DROP TABLE REVIEW_DELIVERY;
DROP TABLE REVIEW_LAUNDRY;
DROP TABLE CUSTOMER;
DROP TABLE MANAGER;
DROP TABLE DELIVERY;
DROP TABLE GOOGLE_OAUTH;
DROP TABLE PASSWORD_AUTH;
DROP TABLE USERS;

CREATE TABLE USERS (
    Username varchar(100),
    Email varchar(100),
    ProfilePicture varchar(100),
    PhoneNumber varchar(15),
    EmailVerified BOOLEAN,
    PhoneNumberVerified BOOLEAN,
    CONSTRAINT pk_USERS PRIMARY KEY (Email),
    CONSTRAINT Uniq_USERS UNIQUE (PhoneNumber)
);

CREATE TABLE PASSWORD_AUTH(
  Email varchar(100),
  Password varchar(200),
  CONSTRAINT pk_PASSWORD_AUTH PRIMARY KEY(Email),
  CONSTRAINT fk_PASSWORD_AUTH FOREIGN KEY(Email) REFERENCES USERS(Email) ON DELETE CASCADE
);

CREATE TABLE GOOGLE_OAUTH(
  Email varchar(100),
  GoogleId varchar(200),
  CONSTRAINT pk_GOOGLE_OAUTH PRIMARY KEY(Email),
  CONSTRAINT Uniq_GOOGLE_OAUTH UNIQUE(GoogleId),
  CONSTRAINT fk_GOOGLE_OAUTH FOREIGN KEY(Email) REFERENCES USERS(Email) ON DELETE CASCADE
);

CREATE TABLE ADDRESS_RESOLVE(
  latitude double precision,
  longuitude double precision,
  FormattedAddress varchar(100),
  CONSTRAINT PK_ADDRESS_RESOLVE PRIMARY KEY(latitude,longuitude)
);

CREATE TYPE ADDRESS_TYPE AS (
  latitude double precision,
  longuitude double precision
);



CREATE TABLE MANAGER(
  Email varchar(100),
  LaundryName varchar(100),
  Address ADDRESS_TYPE,
  OpeningTime time,
  ClosingTime time,
  CONSTRAINT pk_MANAGER PRIMARY KEY(Email),
  CONSTRAINT fk_MANAGER FOREIGN KEY(Email) REFERENCES USERS(Email) ON DELETE CASCADE
);

CREATE TABLE CUSTOMER(
  Email varchar(100),
  Address ADDRESS_TYPE,
  CONSTRAINT pk_CUSTOMER PRIMARY KEY(Email),
  CONSTRAINT fk_CUSTOMER FOREIGN KEY(Email) REFERENCES USERS(Email) ON DELETE CASCADE
);

CREATE TABLE DELIVERY(
  Email varchar(100),
  ModeOfTransportation varchar(100),
  CONSTRAINT pk_DELIVERY PRIMARY KEY(Email),
  CONSTRAINT fk_DELIVERY FOREIGN KEY(Email) REFERENCES USERS(Email) ON DELETE CASCADE
);

CREATE TABLE CHAT(
  MessageID varchar(100),
  Message varchar(250),
  TimeOfDelivery timestamp,
  CONSTRAINT pk_CHAT PRIMARY KEY(MessageID)
);

CREATE TABLE CHAT_SENDER(
  MessageID varchar(100),
  SenderEmail varchar(100),
  CONSTRAINT pk_CHAT_SENDER PRIMARY KEY(MessageID),
  CONSTRAINT fk_CHAT_SENDER_CHAT FOREIGN KEY(MessageID) REFERENCES CHAT(MessageID) ON DELETE CASCADE,
  CONSTRAINT fk_CHAT_SENDER_USERS FOREIGN KEY(SenderEmail) REFERENCES USERS(Email)
);

CREATE TABLE CHAT_RECEIVER(
  MessageID varchar(100),
  ReceiverEmail varchar(100),
  CONSTRAINT pk_CHAT_RECEIVER PRIMARY KEY(MessageID),
  CONSTRAINT fk_CHAT_RECEIVER_CHAT FOREIGN KEY(MessageID) REFERENCES CHAT(MessageID) ON DELETE CASCADE,
  CONSTRAINT fk_CHAT_RECEIVER_USERS FOREIGN KEY(ReceiverEmail) REFERENCES USERS(Email)
);

CREATE TABLE NOTIFICATION(
  NotificationID varchar(100),
  Email varchar(100),
  Message varchar(250),
  CONSTRAINT pk_NOTIFICATION PRIMARY KEY(NotificationID),
  CONSTRAINT fk_NOTIFICATION FOREIGN KEY(Email) REFERENCES USERS(Email)
);

CREATE TABLE ORDERS(
  OrderID varchar(100),
  CustomerEmail varchar(100),
  ManagerEmail varchar(100),
  Status varchar(20),
  CONSTRAINT pk_ORDER PRIMARY KEY(OrderID),
  CONSTRAINT fk_ORDER_CUSTOMER FOREIGN KEY(CustomerEmail) REFERENCES CUSTOMER(Email),
  CONSTRAINT fk_ORDER_MANAGER FOREIGN KEY(ManagerEmail) REFERENCES MANAGER(Email),
  CONSTRAINT check_status CHECK(Status IN ('PENDING', 'COMPLETED', 'DELIVERING', 'DELIVERED', 'PROCESSING', 'COLLECTING','CANCELLED'))
);

CREATE TYPE FULL_NAME AS (
  FirstName varchar(100),
  MiddleName varchar(100),
  LastName varchar(100)
);


CREATE TABLE BILLING(
  OrderID varchar(100),
  PhoneNumber varchar(15) NOT NULL,
  Address ADDRESS_TYPE,
  FullName FULL_NAME,
  PaymentMethod varchar(10) NOT NULL,
  Amount double precision,
  CONSTRAINT pk_BILLING PRIMARY KEY(OrderID),
  CONSTRAINT fk_BILLING FOREIGN KEY(OrderID) REFERENCES ORDERS(OrderId)
);

CREATE TABLE SERVICE(
  ManagerEmail varchar(100),
  ClothType varchar(50),
  Operation varchar(50),
  Price double precision,
  CONSTRAINT pk_SERVICE PRIMARY KEY(ManagerEmail,ClothType,Operation),
  CONSTRAINT fk_SERVICE FOREIGN KEY(ManagerEmail) REFERENCES USERS(Email) ON DELETE CASCADE
);


CREATE TABLE DELIVERY_INFORMATION(
  OrderID varchar(100),
  DeliveryEmail varchar(100),
  Status varchar(20),
  CONSTRAINT pk_DELIVERY_INFORMATION PRIMARY KEY(OrderID,Status),
  CONSTRAINT fk_DELIVERY_INFORMATION_DELIVERY FOREIGN KEY(DeliveryEmail) REFERENCES DELIVERY(Email),
  CONSTRAINT fk_DELIVERY_INFORMATION_ORDERS FOREIGN KEY(OrderID) REFERENCES Orders(OrderID),
  CONSTRAINT check_status CHECK(Status IN ('COMPLETED', 'DELIVERING', 'DELIVERED', 'COLLECTING','CANCELLED'))
);


CREATE TABLE ORDER_DETAILS(
  OrderID varchar(100),
  ClothType varchar(50),
  Operation varchar(50),
  ManagerEmail varchar(100),
  Completed BOOLEAN,
  Quantity INT,
  CONSTRAINT pk_ORDER_DETAILS PRIMARY KEY(OrderID,ClothType,Operation),
  CONSTRAINT fk_ORDER_DETAILS_MANAGER FOREIGN KEY(ManagerEmail) REFERENCES MANAGER(Email),
  CONSTRAINT fk_ORDER_DETAILS_ORDER FOREIGN KEY(OrderID) REFERENCES ORDERS(OrderID) ON DELETE CASCADE,
  CONSTRAINT fk_ORDER_DETAILS_SERVICE FOREIGN KEY(ManagerEmail,ClothType,Operation) REFERENCES SERVICE(ManagerEmail,ClothType,Operation)
);


CREATE TABLE REVIEW_DELIVERY(
  DeliveryEmail varchar(100),
  CustomerEmail varchar(100),
  ReviewStars numeric,
  Review varchar(250),
  CONSTRAINT pk_REVIEW_DELIVERY PRIMARY KEY(DeliveryEmail,CustomerEmail),
  CONSTRAINT fk_REVIEW_DELIVERY_DELIVERY FOREIGN KEY(DeliveryEmail) REFERENCES DELIVERY(Email),
  CONSTRAINT fk_REVIEW_DELIVERY_CUSTOMER FOREIGN KEY(CustomerEmail) REFERENCES CUSTOMER(Email)
);

CREATE TABLE REVIEW_LAUNDRY(
  ManagerEmail varchar(100),
  CustomerEmail varchar(100),
  ReviewStars numeric,
  Review varchar(250),
  CONSTRAINT pk_REVIEW_MANAGER PRIMARY KEY(ManagerEmail,CustomerEmail),
  CONSTRAINT fk_REVIEW_MANAGER_MANAGER FOREIGN KEY(ManagerEmail) REFERENCES MANAGER(Email),
  CONSTRAINT fk_REVIEW_MANAGER_CUSTOMER FOREIGN KEY(CustomerEmail) REFERENCES CUSTOMER(Email)
);